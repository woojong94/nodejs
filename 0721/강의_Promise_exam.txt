function asyncFunc(workNm, time) {
	setTimeout(function() {
		console.log(workNm + ' 완료!');
	}, time);
}

비동기 순차 실행
작업1- 2초뒤 실행, 작업2- 1.5초 뒤 실행, 작업3- 0.7초 실행


function asyncFunc(workNm, time, callback) {
	setTimeout(function() {
		console.log(workNm + ' 완료!');
		if (typeof callback == 'function') {
			callback();
		}
	}, time);
}



1. 함수 콜백 방식

asyncFunc('작업1', 2000, function() {
	asyncFunc('작업2', 1500, function() {
		asyncFunc('작업3', 700);
		});
	});
-->
작업1 완료!
작업2 완료!
작업3 완료!


2. Promise 생성자

function asyncFunc(workNm, time) {
	return new Promise(function(resolve, reject) {
		setTimeout(function() {
			if (workNm) {
				resolve(workNm);
			} else {
				reject('작업없음');
			}
		}, time);
	});
}

3. async ~ await