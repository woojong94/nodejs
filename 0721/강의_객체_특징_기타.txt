객체안에 정의 되어있는 메서드
속성  : function() {...}
	예)
	const person = {
		walk : function() {
			console.log('걷기');
		},  
	};
	-->
	person.walk();
	-->
	걷기


es6+ : 속성명 () {...}로 정의 가능
	예)
	const person = {
		wlak() {
			console.log('걷기');
		}  
	};

객체 속성, 값 축약
ex1)
const list = [0,1,2,3,4,5];
const data = {
    list : list
};
===> const data = {list};

ex2)
const list1 = [0,1,2,3];
const list2 = [4,5,6,7];
const data = { list1, list2 };	===> {list1: list1, list2 : list2}


객체의 구조 분해 문법
	1. 객체의 속성명과 동일한 변수명을 {}안에 정의해 주면 분해가 가능
		- 독립된 변수, 함수로 분해가 가능하다
		
		ex1)
		const person = {
			walk : function() {
				console.log('걷기');
			},  
		};
		->
		const { walk } = person;
		->
		walk();
		-> 걷기 출력	
			//walk 메서드가 walk 변수로 구조 분해됨
		ex2)	
		const person = {
			age : 40,
			gender : 'F',
			walk : function() {
				console.log('걷기');
			},  
		};
		->
		const {age, gender, walk} = person;
		
		ex3)
		const person = {
			age : 40,
			gender : 'F',
			status : {
				count : 10,
			},
			walk : function() {
				console.log('걷기');
			},  
		};
		->
		const { status : { count } } = person;
		//속성 안의 값은 {} 활용
		
		배열객체에서 구조분해
		const [ ... ] -> 순서로 분해
		
		const nums = [0,1,2,3,4,5];
		->
		const [a,b,c,d,e,f] = nums;
		
		// 원하는 값만 얻고 싶으면, 빈값으로 둠
			-> const [a,,,,,f] = nums;